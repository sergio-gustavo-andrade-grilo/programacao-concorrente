Ao executar o programa, verifica-se que os elementos são produzidos em uma ordem arbitrária, mas consumidos em ordem de prioridade. Se o tempo de produção for menor que o de consumo, nota-se que o resultado da execução retorna os elementos em ordem crescente, de acordo com a prioridade predefinida de números inteiros (menor primeiro). Caso contrário, os elementos ainda são consumidos em ordem prioritária, mas é possível que o produtor gere um número menor depois do consumo de um número maior. Esse problema é mais perceptível quando executamos o programa com atrasos pequenos e um número de elementos pequeno. A mesma situação de atraso da etapa 2 ocorre, além das situações de tempos de atraso diferentes da etapa 1.